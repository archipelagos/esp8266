# INFO: http://www.jarzebski.pl/blog/kategoria/software.html
# INFO: http://www.nongnu.org/libunwind/
# INFO: https://blog.cesanta.com/esp8266-gdb

CONFIG_TOOLCHAIN_NAME=		esp-open-sdk
CONFIG_RTOS_NAME=		esp-open-rtos

CONFIG_REPOSITORY_SERVER=	http://github.com
CONFIG_TOOLCHAIN_USERNAME=	pfalcon
CONFIG_RTOS_USERNAME=		SuperHouse

CONFIG_COMPILER_COMMAND=	g++

CONFIG_BUILDSCRIPT_FILE_NAME=	Makefile

CONFIG_SRC_DIR_NAME=		src
CONFIG_BUILD_DIR_NAME=		build
CONFIG_FIRMWARE_DIR_NAME=	firmware
CONFIG_EXAMPLES_DIR_NAME=	examples

CONFIG_TARGET_NAME=		serial_echo

# TODO: Target is localized in firmware/0x00000.bin and firmware/0x20000.bin
CONFIG_TARGET_SUFFIX=		out
CONFIG_TARGET_FILE_NAME=	$(CONFIG_TARGET_NAME).$(CONFIG_TARGET_SUFFIX)

CONFIG_TOOLCHAIN_SRC_DIR=	$(CONFIG_SRC_DIR)/$(CONFIG_TOOLCHAIN_NAME)
CONFIG_TOOLCHAIN_BIN_DIR=	$(CONFIG_TOOLCHAIN_SRC_DIR)/xtensa-lx106-elf/bin

CONFIG_RTOS_SRC_DIR=		$(CONFIG_SRC_DIR)/$(CONFIG_RTOS_NAME)

CONFIG_SRC_DIR=			$(CONFIG_SRC_DIR_NAME)
CONFIG_BUILD_DIR=		$(CONFIG_BUILD_DIR_NAME)
CONFIG_EXAMPLES_DIR=		$(CONFIG_RTOS_SRC_DIR)/$(CONFIG_EXAMPLES_DIR_NAME)

CONFIG_TOOLCHAIN_BASE_URL=	$(CONFIG_REPOSITORY_SERVER)/$(CONFIG_TOOLCHAIN_USERNAME)
CONFIG_TOOLCHAIN_FULL_URL=	$(CONFIG_TOOLCHAIN_BASE_URL)/$(CONFIG_TOOLCHAIN_NAME)

CONFIG_RTOS_BASE_URL=		$(CONFIG_REPOSITORY_SERVER)/$(CONFIG_RTOS_USERNAME)
CONFIG_RTOS_FULL_URL=		$(CONFIG_RTOS_BASE_URL)/$(CONFIG_RTOS_NAME)

ROOT_DIR=			$(realpath \
					.)

include examples.mk

all: \
	$(EXAMPLES_RULE_PREFIX)_serial_echo

$(EXAMPLES_RULE_LIST): \
		$(EXAMPLES_RULE_PREFIX)_%: \
		$(CONFIG_EXAMPLES_DIR)/%/$(EXAMPLES_TARGET_LOWER_FILE)

$(EXAMPLES_TARGET_FILE_DIR_LIST): \
		%/$(EXAMPLES_TARGET_LOWER_FILE): \
		$(CONFIG_TOOLCHAIN_BIN_DIR) \
		$(CONFIG_RTOS_SRC_DIR)
	cd \
		$* && \
		export \
			PATH=$(ROOT_DIR)/$(CONFIG_TOOLCHAIN_BIN_DIR):$(PATH) && \
		make

#make flash -j4 -C examples/http_get ESPPORT=/dev/ttyUSB0

$(CONFIG_TOOLCHAIN_BIN_DIR): \
		$(CONFIG_TOOLCHAIN_SRC_DIR)
	cd \
		$(CONFIG_TOOLCHAIN_SRC_DIR) && \
		make \
			STANDALONE=y

$(CONFIG_TOOLCHAIN_SRC_DIR): \
		%:
	git \
		clone \
		--recursive \
		$(CONFIG_TOOLCHAIN_FULL_URL) \
		$*

$(CONFIG_RTOS_SRC_DIR): \
		%:
	git \
		clone \
		--recursive \
		$(CONFIG_RTOS_FULL_URL) \
		$*

clean: \
		clean_$(CONFIG_SRC_DIR)

clean_$(CONFIG_SRC_DIR): \
		clean_%:
	rm \
		-rf \
		$*

